<!doctype html>
<html>
<head>
    {% block stylesheets %}
        {{ encore_entry_link_tags('app') }}
    {% endblock %}
    {% block javascripts %}
        {{ encore_entry_script_tags('app')}}
    {% endblock %}

    <title>Generate Image Using Dall-E </title>
    <link rel="icon" type="image/x-icon" href="https://cdn.discordapp.com/attachments/869334941337546782/1036327824862220378/Method_Draw_Image.png">
</head>
<body  class="bg-blue-200 bg-gradient-to-tr from-blue-200 to-blue-400 h-fit scrollbar">
    <div class="min-h-screen h-fit flex justify-center mb-10" >
    {# <div class="bg-blue-200  h-fit flex items-center justify-center mb-40"  > #}
        <div {{ stimulus_controller('genimage') }} class="bg-white w-10/12 absolute top-0 h-16 rounded-b-lg mx-auto flex items-center px-5 ">
            <h2  {{stimulus_target("genimage","username")}} class="" >
                Logged in as <span id="loggedUsername" class="font-bold" ></span> 
                , you have <span id="numOfPhotos" class="font-bold" ></span> photos
            </h2>
            <div class="absolute right-5 flex flex-row gap-10 ">
                <h2   class="cursor-pointer hover:scale-x-110 transition-all duration-100" > <a id="admin" class="no-underline hidden" href="/admin">Admin Panel</a> </h2>
                <h2   class="cursor-pointer hover:scale-x-110 transition-all duration-100" > <a class="no-underline" href="/">Generate Image</a> </h2>
                <h2   class="cursor-pointer hover:scale-x-110 transition-all duration-100"    >
                    <a {{stimulus_action("genimage","logout")}} class="no-underline" > Logout </a>
                </h2>                
            </div>
        </div>
        {# /* ---------------------- container for the collection ---------------------- */ #}
        <div class="bg-white p-10 rounded-lg shadow md:w-3/4 mx-auto lg:w-3/4 
                    transition-all duration-200 
                    items-center content-center grid grid-cols-3 gap-x-4 gap-y-6 
                    min-h-96 h-fit mt-20" id="collectionContainer">
            
            {# <div class="flex flex-col gap-3 mx-4 items-center post relative" {{stimulus_target("collection","post")}} >
                <img src="https://ik.imagekit.io/arfizato/emptyFolder.png?ik-sdk-version=javascript-1.4.3&updatedAt=1669898782247" 
                    {{ stimulus_target('collection', 'image') }} class="w-64 aspect-square m-auto rounded-lg shadow-md image "/>
                <p class="font-extralight overflow-y-auto scrollbar overflow-ellipsis break-words h-10 w-full text-center prompt mb-20 " 
                    {{stimulus_target('collection','prompt') }} ></p>
                    <button data-admin-id-param=${imageId} data-admin-parent-param=${"image"+imageId} data-action="admin#deleteImage"
                        class="bg-red-600 text-white py-2 px-4 w-64 h-10
                        hover:scale-90 transition-all duration-200 rounded-md 
                        absolute bottom-0 ">
                        Delete
                    </button>
            </div>
            <div {{stimulus_controller("collection")}}class="flex flex-col gap-3 mx-4 items-center post relative" id="image1">
                <img src=${url} 
                    class="w-64 aspect-square m-auto rounded-lg shadow-md image "/>
                <p class="font-extralight overflow-y-auto scrollbar overflow-ellipsis break-words h-10 w-full text-center prompt mb-20 " 
                    ${prompt}></p>
                    <button data-collection-id-param="1" data-collection-parent-param="image1" data-action="collection#deleteImage"
                        class="bg-red-600 text-white py-2 px-4 w-64 h-10
                        hover:scale-90 transition-all duration-200 rounded-md 
                        absolute bottom-0 ">
                        Delete
                    </button>
            </div> #}
            {# <div class="flex flex-col gap-3 mx-4 items-center post relative" id=${"image"+imageId}>
                <img src=${url} 
                    class="w-64 aspect-square m-auto rounded-lg shadow-md image "/>
                <p class="font-extralight overflow-y-auto scrollbar overflow-ellipsis break-words h-16 w-64 text-center prompt mb-12 " 
                    >${prompt}</p>
                    <button data-collection-id-param=${imageId} data-collection-parent-param=${"image"+imageId} data-action="collection#deleteImage"
                        class="bg-red-600 text-white py-2 px-4 w-64 h-10 hover:scale-90 transition-all duration-200 rounded-md 
                        absolute bottom-0 ">Delete
                    </button>
            </div> #}


        </div>
    </div>
    
    <script>
        function loadImageContainer(image){
            let {url,imageId,prompt} = image;
            let p= document.getElementById("collectionContainer");
            let imageContainerElem= `
                <div class="flex flex-col gap-3 mx-4 items-center post relative rounded-lg py-4 sborder-2 sborder-gray-100 sshadow-md sborder-solid sbg-gray-50 " 
                    id=${"image"+imageId} {{stimulus_controller("collection")}} >
                    <img src=${url} class="w-64 aspect-square m-auto rounded-lg shadow-md image" />
                    <p class="font-extralight overflow-y-auto scrollbar overflow-ellipsis break-words h-10 w-64 text-center prompt mb-12 " 
                        >${prompt}</p>
                        <button data-collection-id-param=${imageId} data-collection-parent-param=${"image"+imageId} data-action="collection#deleteImage"
                            class="bg-red-600 text-white py-2 px-4 w-64 h-10 hover:scale-90 transition-all duration-200 rounded-md absolute bottom-4 ">
                            Delete
                        </button>
                </div>            
            `;
            p.insertAdjacentHTML( 'beforeend', imageContainerElem );
        }
        
        window.onload= function(){            // to verify if user is logged in 
            const authToken = sessionStorage.getItem("authToken");
            const expirationDate= sessionStorage.getItem("expirationDate");

            console.log(authToken === null,authToken,"\n",(expirationDate === null),expirationDate);
            if (authToken === null || expirationDate === null ){
				window.location.href= "/login" ;                
                return }
            var myHeaders = new Headers();
            myHeaders.append("apikey", "KEYFORSUPA");
            myHeaders.append("Authorization", "Bearer KEYFORSUPA");

            var requestOptions = {
                method: 'GET',
                headers: myHeaders,
                redirect: 'follow'
            };

            fetch("URLFORSUPA/rest/v1/User?select=tokenExpirationDate,authToken,username,userId,role&authToken=eq."+authToken, requestOptions)
                .then(response => response.text())
                .then(result => {
                    const res= JSON.parse(result)[0];
                    console.log(res);
                    console.log(res.authToken == authToken, res.authToken, authToken)
                    console.log(new Date()<new Date(expirationDate), new Date(), expirationDate);
                    if (res.authToken === authToken && new Date() < new Date(expirationDate)){
                        console.log("already logged in");  
                        document.getElementById("loggedUsername").innerHTML=res.username;
                        
                        fetch("URLFORSUPA/rest/v1/Image?select=prompt,url,imageId&userId=eq."+res.userId, requestOptions)
                            .then(imgResponse => imgResponse.json())
                            .then(imgRes => {
                                console.log(imgRes);
                                document.getElementById("numOfPhotos").innerHTML=imgRes.length;
                                for (let a=0;a<imgRes.length;a++){
                                    loadImageContainer(imgRes[a]);
                                }

                            })
                            .catch(imgError => console.log('error', imgError));
                        if (res.role === "Member") return 
                        document.getElementById("admin").classList.remove("hidden");
                    }else {
                        window.location.href= "/login";
                    }
                    
                })
                .catch(error => console.log('error', error));

        }
    </script>
    {# <script>
        function loadImage(){

        }
        // to verify if user is logged in 
        window.onload= function(){            
            const authToken = sessionStorage.getItem("authToken");
            const expirationDate= sessionStorage.getItem("expirationDate");

            console.log(authToken === null,authToken,"\n",(expirationDate === null),expirationDate);
            if (authToken === null || expirationDate === null ){
				window.location.href= "/login" ;                
                return }
            var myHeaders = new Headers();
            myHeaders.append("apikey", "KEYFORSUPA");
            myHeaders.append("Authorization", "Bearer KEYFORSUPA");

            var requestOptions = {
                method: 'GET',
                headers: myHeaders,
                redirect: 'follow'
            };

            fetch("URLFORSUPA/rest/v1/User?select=tokenExpirationDate,authToken,username,userId,role&authToken=eq."+authToken, requestOptions)
                .then(response => response.text())
                .then(result => {
                    const res= JSON.parse(result)[0];
                    console.log(res);
                    console.log(res.authToken == authToken, res.authToken, authToken)
                    console.log(new Date()<new Date(expirationDate), new Date(), expirationDate);
                    if (res.authToken === authToken && new Date() < new Date(expirationDate)){
                        console.log("already logged in");  
                        document.getElementById("loggedUsername").innerHTML=res.username;
                        
                        fetch("URLFORSUPA/rest/v1/Image?select=prompt,url&userId=eq."+res.userId, requestOptions)
                            .then(imgResponse => imgResponse.json())
                            .then(imgRes => {
                                console.log(imgRes);
                                const posts = document.querySelectorAll(".post");
                                const images = document.querySelectorAll(".image");
                                const prompts = document.querySelectorAll(".prompt");
                                for (let a = 0;a<imgRes.length;a++){
                                    posts[a].classList.add("flex");
                                    posts[a].classList.remove("hidden");
                                    console.log(posts[a].classList);
                                    images[a].setAttribute("src",imgRes[a].url);
                                    prompts[a].innerHTML= imgRes[a].prompt;
                                }

                            })
                            .catch(imgError => console.log('error', imgError));
                        if (res.role === "Member") return 
                        document.getElementById("admin").classList.remove("hidden");
                    }else {
                        window.location.href= "/login";
                    }
                    
                })
                .catch(error => console.log('error', error));

        }
    </script> #}
</body>
</html>